Grid = a linked list of cells
World = the top-level grid (that all other grids are inside)
Camera = an object that specifies where we're looking (including which grid) and how zoomed in/out we are

Cell {

	.position = vector representing the cell's position in the grid
	.neighbours = references to any cells that are above/below/left/right of this cell
	.drawn = bool that says whether this cell should be drawn or not

	.arrows = array of arrows that are inside this cell
	.doorRight = the door that's to the right of this cell (undefined if empty)
	.doorDown = the door that's below this cell (undefined if empty)

}

Arrow = {
	.grid
	.direction
	.speed
	.volume
	.length = how long the arrow (so, how long it plays sounds for)
}

Door {
	.sound = sound that plays when going through this door (default: none)
	.destinations = reference to any doors that this door portals to (default: just itself)
	.delay = how long to wait before sending to destination (default: 0) (can be negative)
}

==============================

Arrows make grids pass forwards through time. With no arrows, time doesn't pass. If your grid has no arrows left, game over!

You can click+drag to draw doors (lines) on any cell boundary.
By default, they do nothing - arrows just go through them.

You can click on a door to see some options:
* Record a sound (that plays whenever an arrow enters it)
* Set volume/speed/length of arrows that enter it
* Add/Delete destinations - and each destination can have a different delay?

Pitch is determined by y-position of door, relative to wherever the sound was recorded.
